{"version":3,"sources":["emoji.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AACpD,OAAO,KAAA,MAAW,UAAA,CAAW;AAG7B;IAAA;IAUA,CAAC;IATC,6BAAS,GAAT,UAAU,IAAY;QACpB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IAC5C,CAAC;IAOH,gBAAC;AAAD,CAVA,AAUC;;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,EAAG,EAAE;CACxC,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"emoji.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport emoji from 'emojione';\n\n\nexport class EmojiPipe implements PipeTransform {\n  transform(text: String): HTMLElement {\n    return emoji.shortnameToImage(text || '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'emoji'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}